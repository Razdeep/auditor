auditor:
  config:
    applicationName: "client-example"
    eventSource:
      type: USER
      metadata:
        id: ${rand.id}
    metadata:
      itemIdAnything: ${itemNumber}-AND-MODEL-${model}
      noId: NoFetchingHere!
    filters:
      event:
        enabled: false
        type:
          - UPDATED
      element:
        enabled: false
        types:
          - InclusionFilter
          - ExclusionFilter
        options:
          excludes:
            - description
          includes:
            - model
            - price
      logging:
        enabled: true
  producer:
    enabled: true
    bootstrapServers: "localhost:9092"
    topic: testTopic
    configs:
      acks: 0
      batch.size: 1
      buffer.memory: 33554432
      client.id: client-example
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      max.block.ms: 1000
      max.in.flight.requests.per.connection: 1
      retries: 0
      value.serializer: org.apache.kafka.common.serialization.StringSerializer

#lowesiss:
#  springboot:
#    kafka:
#      clusters:
#        auditor-cluster:
#          bootstrapServers: "localhost:9092"
#          defaultConsumerConfigs:
#            auto.offset.reset: latest
#            client.id: product-catalog-initiateDataConsumer-client
#            enable.auto.commit: false
#            group.id: product-catalog-intakeConsumer-group
#            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
#            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      consumers:
#        auditor-consumer:
#          enabled: true
#          topic: testTopic
#          clusterId: "auditor-cluster"




